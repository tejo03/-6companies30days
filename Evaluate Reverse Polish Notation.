class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        op_l=["+","-","*","/"]
        i=2
        if len(tokens)==1:
            return int(tokens[-1])
        while(len(tokens)!=1):
            if tokens[i]=="+":
                first=int(tokens[i-1])
                sec=int(tokens[i-2])
                val=first+sec
                tokens[i-2]=val
                del tokens[i]
                del tokens[i-1]
                i=i-1
            elif tokens[i]=="*":
                first=int(tokens[i-1])
                sec=int(tokens[i-2])
                val=first*sec
                tokens[i-2]=val
                del tokens[i]
                del tokens[i-1]
                i=i-1
            elif tokens[i]=="-":
                first=int(tokens[i-2])
                sec=int(tokens[i-1])
                val=first-sec
                tokens[i-2]=val
                del tokens[i]
                del tokens[i-1]
                i=i-1
            elif tokens[i]=="/":
                first=int(tokens[i-2])
                sec=int(tokens[i-1])
                val=first/sec
                tokens[i-2]=val
                del tokens[i]
                del tokens[i-1]
                i=i-1
            else:
                i=i+1
                if i==len(tokens):
                    return int(tokens[-1])
            
        return int(tokens[-1])
